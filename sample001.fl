(* 
	Sample program 
*)

program foo;
type 	tzanis = integer;
		kri8arakos = real;
var x, y: integer;
	z: real;
	a, b: boolean;
	c: char;
	array11, array12: array [10][20][30] of integer;
	array2: array of char;
	functionPtr1, functionPtr2: function(a1, a2: integer, b:real, c:char, d:boolean):integer;
	functionPtr3: function(a1, a2: integer, b:real, c:char, d:boolean): function(a1, a2: integer, b:real, c:char, d:boolean):integer;

procedure add1(n: integer; k:integer; a, b: real);
type 	tzanis = integer;
			kri8arakos = real;
	var j: integer;
	function cube(i: integer): integer;
	type 	tzanis = integer;
			kri8arakos = real;
	begin
		toLabeltouKritharakomon: result := 1 + 3;
		goto toLabeltouKritharakomon;
		writeInteger(1 + 3, 5 * 8);
		return
	end;
begin
	writeInteger(1 + 3);
	writeInteger(1 - 3);
	writeInteger(1 * 3);
	writeInteger(1 / 3);
	writeInteger(1 div 3);
	writeInteger(1 mod 3);
	writeInteger(1 = 3);
	writeInteger(1 <> 3);
	writeInteger(1 < 3);
	writeInteger(1 > 3);
	writeInteger(1 <= 3);
	writeInteger(1 >= 3);
	writeInteger(1 and 3);
	writeInteger(1 && 3)
	
end;

begin
@defmacro my2pi 2
my2pi
	writeString('Hello world');
	writeString('\n');
	writeString('\n')
end.