@defmacro N 100

program big;

    type
        string = array of char;

	@defmacro M 200
	@defmacro L 300

    var 
		i, j, k, l, m, n: integer;
		mystring: string;
		firstArray, secondArray : array [L][M][N] of real;

    procedure nl();
    begin
		writeString('\n')
	end;

    (* This is a rather silly function *)
    procedure compute(n: integer; k:integer);
        var j: integer;

        function cube(i: integer): integer;
        begin
            result := i * i * i;
            return
        end;
		
		procedure init();
		begin
			for l := 0 to L do
			begin
				for m := M downto 0 do
				begin
					while n < N do
					begin
						i := 1;
						j := 1;
						repeat
						begin
							i := i + i*j;
							j := cube(j)
						end
						until i > l+m+n;
						firstArray[l][m][n] := i;
						secondArray[l][m][n] := j;
						n := n+1
					end
				end
			end
		end;

    begin
		init()
		
    end;

    function promptForInteger(prompt: string) : integer;
    begin
        writeString(prompt);
        result := readInteger();
        writeString('You typed: ');
        writeInteger(result); 
        nl();
        return
    end;

(* Here you can see some useless lines.
** Just for testing the multi-line comments ...
*)

begin
    k := promptForInteger('Type a number: ');
    i := promptForInteger('Type another number: ');
    compute(k,i); (* Here you can see some dummy comments! *)
	goto myLabel;
	writeString("This shoould not be shown");
	myLabel: writeString("Goto Works Fine!")
end.
